
<% let elevatedArray = [] %>
<% let depressedArray = [] %>
<% let irritableArray = [] %>
<% let anxiousArray = [] %>
<% let sleepArray = []%>

<% const getData = (metric, array) => {%>
    <% moods.forEach(m => { %>
        <% if (m !== undefined) {%>
            <% array.push(m[metric]) %>
        <% } else { %>
            <% array.push(0) %>
       <% } %>
    <% }) %>
<% } %>
  

<% getData('elevated', elevatedArray) %>
<% getData('depressed', depressedArray) %>
<% getData('irritable', irritableArray) %>
<% getData('anxious', anxiousArray) %>
<% getData('sleep', sleepArray) %>


<main>              
    <h1 class="page-title">Your Week at a Glance</h1><br />
    <canvas class="chart-view" id="elevated-chart"></canvas><br />
    <canvas class="chart-view" id="depressed-chart"></canvas><br />
    <canvas class="chart-view" id="irritable-chart"></canvas><br />
    <canvas class="chart-view" id="anxious-chart"></canvas><br />
    <canvas class="chart-view" id="sleep-chart"></canvas><br />
</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let clientDates = '<%- JSON.stringify(dates) %>';
    let clientElevated = '<%- JSON.stringify(elevatedArray) %>';
    let clientDepressed = '<%- JSON.stringify(depressedArray) %>';
    let clientIrritable = '<%- JSON.stringify(irritableArray) %>';
    let clientAnxious = '<%- JSON.stringify(anxiousArray) %>';
    let clientSleep = '<%- JSON.stringify(sleepArray) %>';

    // remove the brackets and quotes from strings and split into array
    clientDates = clientDates.replace(/[\[\]"]+/g, '').split(',');
    clientElevated = clientElevated.replace(/[\[\]"]+/g, '').split(',');
    clientDepressed = clientDepressed.replace(/[\[\]"]+/g, '').split(',');
    clientIrritable = clientIrritable.replace(/[\[\]"]+/g, '').split(',');
    clientAnxious = clientAnxious.replace(/[\[\]"]+/g, '').split(',');
    clientSleep = clientSleep.replace(/[\[\]"]+/g, '').split(',');


    const buildChart = (elemId, data, label, borderRbg) => {
        var ctx = document.getElementById(elemId).getContext('2d')
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: clientDates,
                datasets: [{
                    label: label,
                    borderColor: borderRbg,
                    data: data,
                    spanGaps: true
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Severity'
                        },
                        ticks: {
                            max: 3,
                            min: 0,
                        }
                    }]
                }
            }
        })
    }

    const buildSleepChart = (elemId, data, label, borderRbg) => {
        var ctx = document.getElementById(elemId).getContext('2d')
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: clientDates,
                datasets: [{
                    label: label,
                    borderColor: borderRbg,
                    data: data
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Hours'
                        },
                        ticks: {
                            max: 12,
                            min: 0,
                        }
                    }]
                }
            }
        })
    }
    
    buildChart('elevated-chart', clientElevated, 'Elevated Mood', 'rgb(218,0,91)' )
    buildChart('depressed-chart', clientDepressed, 'Depression', 'rgb(51, 78, 125)' )
    buildChart('irritable-chart', clientIrritable, 'Irritability', 'rgb(234,4,12)')
    buildChart('anxious-chart', clientAnxious, 'Anxiety', 'rgb(103, 72, 146)' )
    buildSleepChart('sleep-chart', clientSleep, 'Sleep', 'rgb(47, 72, 88)' )
    
</script>